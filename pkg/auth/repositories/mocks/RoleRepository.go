// Code generated by mockery v2.34.2. DO NOT EDIT.

package mocks

import (
	entities "github.com/Goldwin/ies-pik-cms/pkg/auth/entities"
	mock "github.com/stretchr/testify/mock"
)

// RoleRepository is an autogenerated mock type for the RoleRepository type
type RoleRepository struct {
	mock.Mock
}

type RoleRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *RoleRepository) EXPECT() *RoleRepository_Expecter {
	return &RoleRepository_Expecter{mock: &_m.Mock}
}

// Save provides a mock function with given fields: role
func (_m *RoleRepository) Save(role *entities.Role) error {
	ret := _m.Called(role)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entities.Role) error); ok {
		r0 = rf(role)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RoleRepository_Save_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Save'
type RoleRepository_Save_Call struct {
	*mock.Call
}

// Save is a helper method to define mock.On call
//   - role *entities.Role
func (_e *RoleRepository_Expecter) Save(role interface{}) *RoleRepository_Save_Call {
	return &RoleRepository_Save_Call{Call: _e.mock.On("Save", role)}
}

func (_c *RoleRepository_Save_Call) Run(run func(role *entities.Role)) *RoleRepository_Save_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*entities.Role))
	})
	return _c
}

func (_c *RoleRepository_Save_Call) Return(_a0 error) *RoleRepository_Save_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *RoleRepository_Save_Call) RunAndReturn(run func(*entities.Role) error) *RoleRepository_Save_Call {
	_c.Call.Return(run)
	return _c
}

// NewRoleRepository creates a new instance of RoleRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRoleRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *RoleRepository {
	mock := &RoleRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
